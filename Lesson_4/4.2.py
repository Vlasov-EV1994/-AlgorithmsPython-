# 2. Написать два алгоритма нахождения i-го по счёту простого числа.
# Без использования «Решета Эратосфена»;
# Используя алгоритм «Решето Эратосфена»
# Примечание ко всему домашнему заданию: Проанализировать скорость и сложность алгоритмов.
# Результаты анализа сохранить в виде комментариев в файле с кодом.

# У меня возникают большие сложности с определением общей сложности.
# Пока читал про решето Эратосфена, включая алгоритмы реализации понял что сложность О(n**2),
# в попытках проанализировать сложность без решета получалось что тоже, но кажется я очень ошибаюсь.
# Вариант без использования решета во много раз медленее, либо я сделал не правильно.
import cProfile


# Без использования

def numbers(n):
    a = []
    for i in range(2, n + 1):
        for x in range(2, i):
            if i % x == 0:
                break
        else:
            a.append(i)
    a = set(a)
    return a


# С использованием
def numbers_b(n):
    a = []
    for i in range(n + 1):
        a.append(i)
    a[1] = 0
    i = 2
    while i <= n:
        if a[i] != 0:
            x = i + i
            while x <= n:
                a[x] = 0
                x = x + i
        i += 1
    a = set(a)
    a.remove(0)
    return a


print(numbers(10000))
cProfile.run('numbers(10000)')
print(numbers_b(10000))
cProfile.run('numbers_b(10000)')
