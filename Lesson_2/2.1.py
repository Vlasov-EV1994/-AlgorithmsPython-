# 1. Написать программу, которая будет складывать, вычитать, умножать или делить два числа.
# Числа и знак операции вводятся пользователем. После выполнения вычисления программа не должна завершаться,
# а должна запрашивать новые данные для вычислений. Завершение программы должно выполняться при вводе символа '0'
# в качестве знака операции. Если пользователь вводит неверный знак (не '0', '+', '-', '*', '/'),
# то программа должна сообщать ему об ошибке и снова запрашивать знак операции.
# Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в качестве делителя.

# Использовал цикл While что бы можно было зациклить калькулятор до выбора '0'.
# Это скорее всего можно сделать с помощью функции, но варианты корректно не отробатывали.

# Вводим дополнительную переменную типа BOOLEAN для контроля когда выйти из цикла.
exit_calc = True

while exit_calc:
    # Запрос ввода необходимой операции и числа.
    operation = input('Выберите операцию "+", "-", "*", "/". "0" - для выхода: ')
    # Проверку на '0' (выход) делаем до ввода данных, что бы после решения выйти перед этим не нужно было их вводить.
    if operation == '0':
        # При выполнение выхода меняем exit_calc на False для выхода из цикла и сообщаем что программа выключилась.
        exit_calc = False
        print('Досвидания')
        break
    a = int(input('Введите первое число: '))
    b = int(input('Введите второе число: '))

    # Проверки на остальные операции и их выполнение.
    if operation == '+':
        print(f'Сумма = {a + b}')
    elif operation == '-':
        print(f'Вычитание = {a - b}')
    elif operation == '*':
        print(f'Произведение = {a * b}')
    elif operation == '/':
        # Тут реализована самая простая схема исключения деления на ноль.
        if b != 0:
            print(f'Деление = {a / b}')
        else:
            print('Деление на ноль запрещено!')
    else:
        print('Неверно выбрана операция!')


# Внимательный пересмотр лекции помог понять что выше сделано не верно, а то что нужно было сделать запись строкой.

# При выполнение через match почему то не было ни каких ввыводов данных, python 3.10 стоит,
# даже PyCharm не ругается на синтаксис, но он просто ни чего не делал, поэтому способ с простым разбитием строки
# и извлечением элементов.

exit_calc_b = True
while exit_calc_b:
    example = input('Введите пример, все элементы записав через пробел или "0" - для выхода: ')
    if example == '0':
        exit_calc_b = False
        print('Досвидания')
        break
    list_example = example.split()
    first_number = int(list_example[0])
    operation_b = list_example[1]
    second_number = int(list_example[2])
    if operation_b == '+':
        print(f'Сумма = {first_number + second_number}')
    elif operation_b == '-':
        print(f'Вычитание = {first_number - second_number}')
    elif operation_b == '*':
        print(f'Произведение = {first_number * second_number}')
    elif operation_b == '/':
        if second_number != 0:
            print(f'Деление = {first_number / second_number}')
        else:
            print('Деление на ноль запрещено!')
    else:
        print('Неверно выбрана операция!')
