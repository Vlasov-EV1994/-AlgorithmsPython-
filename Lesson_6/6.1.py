# 1. Подсчитать, сколько было выделено памяти под переменные в ранее разработанных программах в рамках первых
# трех уроков. Проанализировать результат и определить программы с наиболее эффективным использованием памяти.

# Примечание: Для анализа возьмите любые 1-3 ваших программы или несколько вариантов кода для одной и той же задачи.
# Результаты анализа вставьте в виде комментариев к коду. Также укажите в комментариях версию Python
# и разрядность вашей ОС.

# Для выполнения выбрал задачи что бы полегче было. И с помощью самого простого метода. Очень интересно будет посмотреть
# разбор дз)

# Версия Python 3.10, 64х разрядная система.
import sys

# 2.2
number = '1234232'
even = []
odd = []
for i in number:
    if int(i) % 2 == 0:
        even.append(i)
    elif int(i) % 2 != 0:
        odd.append(i)
sum_memory = sys.getsizeof(number) + sys.getsizeof(even) + sys.getsizeof(odd)
print(f'even/odd : {len(even)}/{len(odd)}\n'
      f'size = {sum_memory}')  # size = 232


# Тоже задача 2.2, но в функции и кажется нельзя так измерять память, а что за ответ в таком случае выдаётся?
def even_odd():
    n = '1234232'
    even_b = []
    odd_b = []
    for x in n:
        if int(x) % 2 == 0:
            even_b.append(x)
        elif int(x) % 2 != 0:
            odd_b.append(x)
    return f'even/odd: {len(even_b)}/{len(odd_b)}'


print(even_odd())
print(f'size = {sys.getsizeof(even_odd())}')  # size = 62

# Читал про модуль memory_profiler хотел выполнить ещё через данный модуль, но он не в какую не ставиться на PyCharm.
